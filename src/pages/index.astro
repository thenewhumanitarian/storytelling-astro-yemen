---
import { ViewTransitions } from 'astro:transitions'

import Layout from '../layouts/Layout.astro'
import StoryWrapper from '../components/StoryWrapper.astro'

import stories from '../data/stories.json'

function shuffleArray(array) {
	for (let i = array.length - 1; i > 0; i--) {
		// Generate a random index
		const j = Math.floor(Math.random() * (i + 1))

		// Swap elements at indices i and j
		;[array[i], array[j]] = [array[j], array[i]]
	}
}
// Todo: Can this be done "once" per session perhaps? // Testing pipeline
shuffleArray(stories)
--- 

<>
	<ViewTransitions />

	<div id='login' class='hidden'>
		<Layout dark title='The Yemen Listening Project' header={false} filterButtons={true} switchViewButtons={true} switchViewButtons={true}>
			<div class='flex h-screen h-screen-ios w-full absolute justify-center items-center text-white flex-col'>
				<h1 class='text-xl sm:text-4xl'>The Yemen Listening Project</h1>
				<p class='mt-1 px-2 py-1 bg-white text-black font-bold text-base'>Coming soon...</p>
				<form class='flex flex-col'>
					<input
						autocomplete='no'
						placeholder='Password'
						type='password'
						id='password'
						class='text-center my-2 px-2 py-1 bg-black border text-white font-bold text-base'
					/>
					<button id='login-button' class='hover:text-burgundy font-bold'>Login</button>
				</form>

				<p class='text-sm'>
					A project by{' '}
					<a href='https://www.thenewhumanitarian.org/' class='text-white font-bold underline hover:text-burgundy transition-colors'>
						{' '}
						 The New Humanitarian
					</a>
				</p>
			</div>
		</Layout>
	</div>
	<div class='hidden' id='content' transition:persist>
		<Layout dark title='The Yemen Listening Project' header={true} filterButtons={true} languageButtons={true} switchViewButtons={true}>
			<StoryWrapper stories={stories} transition:persist />
		</Layout>
	</div>
</>

<style>
	body {
		background: black;
	}
	#filter-button {
		z-index: 9999;
	}
</style>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		// Check if the user has visited the site before
		if (localStorage.getItem('auth') === null) {
			document.getElementById('login').classList.remove('hidden')
			return
		} else {
			const authTimestamp: any = new Date(localStorage.getItem('auth'))
			const currentTime: any = new Date()

			// Get the difference in milliseconds between the two dates
			const timeDifference = currentTime - authTimestamp

			// Calculate 7 days in milliseconds for comparison
			const sevenDaysInMilliseconds = 7 * 24 * 60 * 60 * 1000

			if (timeDifference < sevenDaysInMilliseconds) {
				document.getElementById('content').classList.remove('hidden')
			} else {
				document.getElementById('login').classList.remove('hidden')
				localStorage.removeItem('auth') // Optionally remove the expired auth timestamp
			}
		}
	})

	function setAuthLocalStorage() {
		const currentTime = new Date().toISOString()
		localStorage.setItem('auth', currentTime)
	}

	document.getElementById('login-button').addEventListener('click', function (e) {
		e.preventDefault()

		const passwordField: HTMLInputElement = document.querySelector('input#password')

		if (passwordField.value === 'we are listening') {
			setAuthLocalStorage()
		} else {
			// Optionally, you can give some feedback to the user if the password is wrong
			alert('Incorrect password!')
		}

		window.location.href = '/'
	})
</script>
