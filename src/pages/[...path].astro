---
import Layout from '@layouts/Layout.astro'
import StoryWrapper from '@components/StoryWrapper.astro'
import SEO from '@components/SEO.astro'
import stories from '@data/all_stories.json'

const { path } = Astro.params
const pathParams = path?.toString().split('/')
const view = pathParams?.[1] || undefined // Get grid or list from path
const lang = pathParams?.[0] || 'en' // Get language from path

export async function getStaticPaths() {
	const allPaths = [
		{
			params: {
				path: `en`,
			},
		},
		{
			params: {
				path: `en/list`,
			},
		},
		{
			params: {
				path: `en/grid`,
			},
		},
		{
			params: {
				path: `ar`,
			},
		},
		{
			params: {
				path: `ar/list`,
			},
		},
		{
			params: {
				path: `ar/grid`,
			},
		},
	]

	return allPaths
}

function shuffleArray(array) {
	for (let i = array.length - 1; i > 0; i--) {
		// Generate a random index
		const j = Math.floor(Math.random() * (i + 1))

		// Swap elements at indices i and j
		;[array[i], array[j]] = [array[j], array[i]]
	}
}

// Todo: Can this be done "once" per session perhaps? // Testing pipeline
shuffleArray(stories)

const isLegacy = view === 'legacy'
---

<Layout dark title='The Yemen Listening Project' header={true} filterButtons={true} switchViewButtons={true} languageButtons={true}>
	<SEO slot='seo' title={`The Yemen Listening Project`} description={'Where Yemenis talk, and the world listens.'} />
	<!-- <div class='fixed top-0 left-0 w-screen h-screen -z-1 pointer-events-none' id='city'></div> -->
	<StoryWrapper stories={stories} view={view} lang={lang} />
</Layout>

<script>
	// Prevent the default pull-to-refresh behavior when the user attempts to scroll up.
	let lastTouchY = 0
	const maybePreventPullToRefresh = (event) => {
		const firstTouchY = event.touches[0].clientY
		const bodyScrollTop = document.body.scrollTop || document.documentElement.scrollTop
		const documentScrollTop = document.documentElement.scrollTop

		if (bodyScrollTop === 0 && documentScrollTop === 0 && firstTouchY > lastTouchY) {
			// To prevent pull-to-refresh action, prevent the default behavior.
			event.preventDefault()
		}

		lastTouchY = firstTouchY
	}

	document.addEventListener(
		'touchstart',
		(event) => {
			if (event.touches.length !== 1) return

			lastTouchY = event.touches[0].clientY
			// Optional: Detect if the user is touching within certain elements that
			// should still allow scrolling.
		},
		{ passive: false },
	)

	document.addEventListener('touchmove', maybePreventPullToRefresh, { passive: false })
</script>
