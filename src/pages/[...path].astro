---
import Layout from '@layouts/Layout.astro'
import StoryWrapper from '@components/StoryWrapper.astro'
import SEO from '@components/SEO.astro'
import stories from '@data/all_stories.json'

const { path } = Astro.params
const pathParams = path?.toString().split('/')
const view = pathParams?.[1] || undefined // Get grid or list from path
const lang = pathParams?.[0] || 'en' // Get language from path

export async function getStaticPaths() {
	const allPaths = [
		{
			params: {
				path: `en`,
			},
		},
		{
			params: {
				path: `en/list`,
			},
		},
		{
			params: {
				path: `en/grid`,
			},
		},
		{
			params: {
				path: `ar`,
			},
		},
		{
			params: {
				path: `ar/list`,
			},
		},
		{
			params: {
				path: `ar/grid`,
			},
		},
		{
			params: {
				path: `ar/legacy`,
			},
		},
		{
			params: {
				path: `en/legacy`,
			},
		},
	]

	return allPaths
}

function shuffleArray(array) {
	for (let i = array.length - 1; i > 0; i--) {
		// Generate a random index
		const j = Math.floor(Math.random() * (i + 1))

		// Swap elements at indices i and j
		;[array[i], array[j]] = [array[j], array[i]]
	}
}

// Todo: Can this be done "once" per session perhaps? // Testing pipeline
shuffleArray(stories)

const isLegacy = view === 'legacy'
---

<Layout
	dark
	title='The Yemen Listening Project'
	header={true}
	filterButtons={isLegacy ? false : true}
	languageButtons={isLegacy ? false : true}
	switchViewButtons={isLegacy ? false : true}
>
	<SEO slot='seo' title={`The Yemen Listening Project`} description={'Where Yemenis talk, and the world listens.'} />
	<!-- <div class='fixed top-0 left-0 w-screen h-screen -z-1 pointer-events-none' id='city'></div> -->
	{view !== 'legacy' && <StoryWrapper stories={stories} view={view} lang={lang} />}
</Layout>

<script>
	// Prevent the default pull-to-refresh behavior when the user attempts to scroll up.
	let lastTouchY = 0
	const maybePreventPullToRefresh = (event) => {
		const firstTouchY = event.touches[0].clientY
		const bodyScrollTop = document.body.scrollTop || document.documentElement.scrollTop
		const documentScrollTop = document.documentElement.scrollTop

		if (bodyScrollTop === 0 && documentScrollTop === 0 && firstTouchY > lastTouchY) {
			// To prevent pull-to-refresh action, prevent the default behavior.
			event.preventDefault()
		}

		lastTouchY = firstTouchY
	}

	document.addEventListener(
		'touchstart',
		(event) => {
			if (event.touches.length !== 1) return

			lastTouchY = event.touches[0].clientY
			// Optional: Detect if the user is touching within certain elements that
			// should still allow scrolling.
		},
		{ passive: false },
	)

	document.addEventListener('touchmove', maybePreventPullToRefresh, { passive: false })
</script>

<!-- <script is:inline define:vars={{ view }}>
	if (view === 'legacy') return

	!(function (a, b) {
		'object' == typeof exports && 'undefined' != typeof module ? b() : 'function' == typeof define && define.amd ? define(b) : b()
	})(0, function () {
		'use strict'
		var a =
				'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
					? function (a) {
							return typeof a
						}
					: function (a) {
							return a && 'function' == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? 'symbol' : typeof a
						},
			b = (function () {
				function a(a, b) {
					for (var c, d = 0; d < b.length; d++)
						(c = b[d]),
							(c.enumerable = c.enumerable || !1),
							(c.configurable = !0),
							'value' in c && (c.writable = !0),
							Object.defineProperty(a, c.key, c)
				}
				return function (b, c, d) {
					return c && a(b.prototype, c), d && a(b, d), b
				}
			})(),
			c = { i: 'Internet Explorer', f: 'Firefox', o: 'Opera', s: 'Apple Safari', n: 'Netscape Navigator', c: 'Chrome', x: 'Other' },
			d = { i: 11, f: 20, c: 20, o: 10.6, s: { d: 8, m: 14 }, n: 10 },
			e = (function () {
				function f(a, b) {
					!(function (a, b) {
						if (!(a instanceof b)) throw new TypeError('Cannot call a class as a function')
					})(this, f),
						(this.options = a ? Object.assign({}, d, a) : d),
						(this.cb =
							b ||
							function (a) {
								return console.log('Old Browser Detected: ' + a)
							})
				}
				return (
					b(
						f,
						[
							{
								key: 'detect',
								value: function () {
									var b = f.getBrowser(),
										c = 0
									return (
										(c = 'object' === a(this.options[b.n]) ? (b.isMobile ? this.options[b.n].m : this.options[b.n].d) : this.options[b.n]),
										('x' === b.n || b.v <= c) && (this.cb.call(null, b), !0)
									)
								},
							},
						],
						[
							{
								key: 'getBrowser',
								value: function () {
									var a,
										b,
										d = navigator.userAgent,
										f = /ipad|ipod|iphone|android/i.test(d)
									if (
										/bot|googlebot|slurp|mediapartners|adsbot|bingbot|google web preview|like firefox|chromeframe|seamonkey|opera mini|min|meego|netfront|moblin|maemo|arora|camino|flot|k-meleon|fennec|kazehakase|galeon|epiphany|rekonq|symbian|webos/i.test(
											d,
										)
									)
										a = 'x'
									else if (/Trident.(\d+\.\d+)/i.test(d)) a = 'io'
									else if (/MSIE.(\d+\.\d+)/i.test(d)) a = 'i'
									else if (/Chrome.(\d+\.\d+)/i.test(d)) a = 'c'
									else if (/Firefox.(\d+\.\d+)/i.test(d)) a = 'f'
									else if (/Version.(\d+.\d+).{0,10}Safari/i.test(d)) a = 's'
									else if (/Safari.(\d+)/i.test(d)) a = 'so'
									else if (/Opera.*Version.(\d+\.?\d+)/i.test(d)) a = 'o'
									else if (/Opera.(\d+\.?\d+)/i.test(d)) a = 'o'
									else {
										if (!/Netscape.(\d+)/i.test(d)) return { n: 'x', v: 0, t: c[a] }
										a = 'n'
									}
									return 'x' == a
										? { n: 'x', v: 0, t: c[a] }
										: ((b = new Number(RegExp.$1)),
											'so' == a &&
												((b =
													(100 > b ? 1 : 130 > b && 1.2) ||
													(320 > b && 1.3) ||
													(520 > b && 2) ||
													(524 > b && 3) ||
													(526 > b && 3.2) ||
													4),
												(a = 's')),
											'i' == a && 7 == b && window.XDomainRequest && (b = 8),
											'io' == a && ((a = 'i'), (b = 5 < b ? 10 : 4 < b ? 9 : 3.1 < b ? 8 : 3 < b ? 7 : 9)),
											{ n: a, v: b, t: c[a] + ' ' + b, isMobile: f })
								},
							},
						],
					),
					f
				)
			})()
		window.oldBrowserDetector = e
	})
	new oldBrowserDetector(
		{
			i: 11,
			f: 20,
			c: 20,
			o: 10.6,
			s: { d: 8, m: 12 },
			n: 10,
		},
		function () {
			var overlay = document.createElement('div')
			overlay.style.position = 'fixed'
			overlay.style.top = '0'
			overlay.style.left = '0'
			overlay.style.width = '100%'
			overlay.style.height = '100%'
			overlay.style.backgroundColor = 'rgba(0, 0, 0, 0.75)'
			overlay.style.color = 'white'
			overlay.style.display = 'flex'
			overlay.style.flexDirection = 'column'
			overlay.style.justifyContent = 'center'
			overlay.style.alignItems = 'center'
			overlay.style.zIndex = '10000'
			overlay.style.fontSize = '20px'
			overlay.style.padding = '20px'
			overlay.style.boxSizing = 'border-box'
			overlay.style.textAlign = 'center'

			var title = document.createElement('h2')
			title.textContent = 'THE YEMEN LISTENING PROJECT'
			title.classList.add('tracking-tight')
			title.classList.add('font-bold')

			var message = document.createElement('p')
			message.innerHTML = 'Your browser is not supported.<br>متصفحك غير مدعوم.'

			var linkEN = document.createElement('a')
			linkEN.href = '/en/legacy'
			linkEN.className = 'text-burgundy font-semibold' // Assuming these classes are defined in your CSS
			linkEN.style.textDecoration = 'underline'
			linkEN.style.marginTop = '20px'
			linkEN.textContent = 'Click here'

			var linkAR = document.createElement('a')
			linkAR.href = '/ar/legacy'
			linkAR.className = 'text-burgundy font-semibold' // Assuming these classes are defined in your CSS
			linkAR.style.textDecoration = 'underline'
			linkAR.style.marginTop = '10px' // Less space between the links
			linkAR.textContent = 'اضغط هنا'

			overlay.appendChild(title)
			overlay.appendChild(message)
			overlay.appendChild(linkEN)
			overlay.appendChild(linkAR)

			document.body.appendChild(overlay)

			// Optional: Hide the overlay when any link is clicked.
			var hideOverlay = function () {
				overlay.style.display = 'none'
			}
			linkEN.onclick = hideOverlay
			linkAR.onclick = hideOverlay
		},
	).detect()
</script> -->
