---
import Header from '@components/header/Header.astro'
import MenuOverlay from '@components/menu/MenuOverlay.astro'
import GoogleTagManager from '@components/GoogleTagManager.astro'

import '@styles/tailwind.css'
import '@styles/global.css'

export interface Props {
	filterButtons?: boolean
	languageButtons?: object
	switchViewButtons?: boolean
	dark?: boolean
	header?: boolean
	title?: string
	dir?: string
	overflow?: string
}

const { filterButtons, languageButtons, dark, header, switchViewButtons } = Astro.props as Props
let { lang } = Astro.params

if (!lang) {
	// Read path parameters for language and slug
	const { path } = Astro.params

	const pathParams = path?.toString().split('/')
	lang = pathParams?.[0] || 'en'
}

const isProd = import.meta.env.PROD
---

<!doctype html>
<html lang='en' dir={lang === 'ar' ? 'rtl' : 'ltr'}>
	<head> <!-- GA4 --></head>s
	{isProd && <GoogleTagManager partytown={true} measurementId='G-CN7NT4K7P4' />}
	<!-- End GA4 -->

	<!-- Browser detection -->
	<script>
		// Check current page URL contains word legacy
		if (window.location.href.indexOf('legacy') <= 0) {
			console.log('Detecting browser...')

			var browser = (function () {
				var ua = navigator.userAgent,
					tem,
					M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || []

				if (/trident/i.test(M[1])) {
					tem = /\brv[ :]+(\d+)/g.exec(ua) || []
					return { name: 'IE', version: tem[1] || '' }
				}

				if (M[1] === 'Chrome') {
					tem = ua.match(/\b(OPR|Edge)\/(\d+)/)
					if (tem != null) {
						return { name: tem[1].replace('OPR', 'Opera'), version: tem[2] }
					}
				}

				M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?']

				if ((tem = ua.match(/version\/(\d+)/i)) != null) {
					M.splice(1, 1, tem[1])
				}

				return { name: M[0], version: M[1] }
			})()

			console.log(browser)
			let redirectToLegacy = false

			if (browser.name === 'Safari' && browser.version < 15) {
				console.log('Safari version is less than 15')
				redirectToLegacy = true
			} else if (browser.name === 'Firefox' && browser.version < 100) {
				console.log('Firefox version smaller than 100')
				redirectToLegacy = true
			} else if (browser.name === 'Chrome' && browser.version < 90) {
				console.log('Chrome version smaller than 90')
				redirectToLegacy = true
			} else if (browser.name === 'Edge' && browser.version < 90) {
				console.log('Edge version smaller than 90')
				redirectToLegacy = true
			} else if (browser.name === 'Opera' && browser.version < 90) {
				console.log('Opera version smaller than 90')
				redirectToLegacy = true
			} else if (browser.name === 'IE') {
				console.log('IE detected')
				redirectToLegacy = true
			}

			if (redirectToLegacy) {
				window.location.href = '/legacy'
			}
		} else {
			console.log('This is a legacy page. No browser detection needed.')
		}
	</script>
	<!-- /Browser detection -->

	<!-- Todo: Change meta tags using Drupal tags before publication  -->
	<slot name='seo' />

	<body>
		<!-- Header  -->
		{header && <Header dark={dark} filterButtons={filterButtons} languageButtons={languageButtons} switchViewButtons={switchViewButtons} />}
		<!-- Main content -->
		<slot />
		<!-- Menu overlay -->
		<MenuOverlay />
		<!-- Footer  -->
		<!-- No footer set -->
	</body>

	<style is:global lang={'scss'}>
  html[dir='ltr'] {
    /* Styles for left-to-right direction */
  }

  html[dir='rtl'] * {
    text-align: right;
    &.text-center {
      text-align: center;
    }
  }

  body {
    background: black;
		/* background-image: url('https://assets.thenewhumanitarian.org/s3fs-public/styles/responsive_large/public/2023-06/night-sky-overlay_0.png.webp'); */
		background-size: cover;
    background-position: center;
		background-repeat: no-repeat;
    background-attachment: fixed;
  }

  #city, #overlay-city {
		z-index: -1;
    background-color: transparent;
		background-image: url('https://assets.thenewhumanitarian.org/s3fs-public/styles/responsive_large/public/2023-06/night-sky-overlay_0.png.webp');
		background-size: cover;
		background-position: center;
		background-repeat: no-repeat;
  }
  #city {
    /* Add the blur effect */
    filter: blur(8px);
    -webkit-filter: blur(8px);
  }

	@media screen and (max-width: 640px) {
		#city, #overlay-city {
			background-position: bottom center;
      filter: blur(2px);
      -webkit-filter: blur(2px);
		}
	}
</style>


</html>
