---
// import HeaderLogo from './HeaderLogoSimple.astro'
import Pergament from '@components/Pergament.astro'
import Logo from '@components/header/Logo.astro'
import LanguageButtons from '@components/buttons/LanguageButtons.astro'
import { translations } from '@data/translations'

import Intro from './content/intro.astro'
import About from './content/about.astro'
import Credits from './content/credits.astro'

import static_pages from '@data/static_pages.json'

let { lang } = Astro.params

if (!lang) {
	// Read path parameters for language and slug
	const { path } = Astro.params

	const pathParams = path?.toString().split('/')
	lang = pathParams?.[0] || 'en'
}

const navWrapperClasses = 'flex flex-row items-center justify-center gap-x-2 sm:gap-x-5 w-full z-50'
const navContainerClasses = 'flex flex-row text-right items-center sm:items-center gap-x-5'
const navButtonClasses =
	'text-white bg-black px-3 py-2 border-white border-2 font-title text-base sm:text-xl lg:text-2xl xl:text-3xl hover:text-black transition-colors cursor-pointer hover:bg-white'
---

<div
	id='menu-overlay'
	class='flex flex-col top-0 left-0 w-full h-screen h-screen-ios bg-black items-center justify-center cursor-pointer p-5 sm:p-8 z-50 gap-y-5 sm:gap-y-8'
	transition:persist
>
	<div class='flex pt-0 sm:mt-0 justify-center sm:justify-center items-center sm:top-5 left-0 w-full'>
		<div class='flex flex-col gap-0 gap-y-5 sm:gap-8 items-center justify-center'>
			<div class='w-56 sm:w-80 md:w-96 h-auto'><Logo /></div>
			<div class={navWrapperClasses}>
				<nav class={navContainerClasses}>
					{
						static_pages.links[lang].map((page, i) => {
							const { className, href, text } = page
							return (
								<span data-content={page.id} class={`nav-button ${navButtonClasses} ${className}`} data-astro-reload>
									{text}
								</span>
							)
						})
					}
				</nav>
			</div>
			<LanguageButtons classNames='intro__language--button' links={{ en: '/en/grid', ar: '/ar/grid' }} />
		</div>
	</div>

	<section class='flex flex-col z-50 cursor-default'>
		<div class='w-full'>
			<Pergament lang={lang || 'en'} classNames='p-4 text-black h-full rounded-xs min-h-[20vh] max-h-[45vh] sm:max-h-[50vh]' overflowY={'auto'}>
				<div class='content-container' id='intro'>
					<Intro lang={lang} />
				</div>
				<div class='content-container' id='about'>
					<About lang={lang} />
				</div>
				<div class='content-container' id='credits'>
					<Credits lang={lang} />
				</div>
			</Pergament>
		</div>
	</section>

	{
		lang === 'ar' ? (
			<div class='absolute top-1 left-7 w-8 h-8 cursor-pointer text-white hover:text-burgundy transition-colors menu-close-button z-50'>
				<svg class='fill-current' width='100%' height='90' viewBox='0 0 90 90' fill='none' xmlns='http://www.w3.org/2000/svg'>
					<path
						class='fill-current'
						fill-rule='evenodd'
						clip-rule='evenodd'
						d='M1.84937 1.84937C4.02123 -0.317302 7.53683 -0.317302 9.7087 1.84937L44.6674 36.8134L79.626 1.84937C81.7979 -0.317302 85.3135 -0.317302 87.4854 1.84937C89.652 4.02123 89.652 7.53683 87.4854 9.7087L52.5214 44.6674L87.4854 79.626C89.652 81.7979 89.652 85.3135 87.4854 87.4854C85.3135 89.652 81.7979 89.652 79.626 87.4854L44.6674 52.5214L9.7087 87.4854C7.53683 89.652 4.02123 89.652 1.84937 87.4854C-0.317302 85.3135 -0.317302 81.7979 1.84937 79.626L36.8134 44.6674L1.84937 9.7087C-0.317302 7.53683 -0.317302 4.02123 1.84937 1.84937Z'
					/>
				</svg>
			</div>
		) : (
			<div class='absolute top-1 right-7 w-8 h-8 cursor-pointer text-white hover:text-burgundy transition-colors menu-close-button z-50'>
				<svg class='fill-current' width='100%' height='90' viewBox='0 0 90 90' fill='none' xmlns='http://www.w3.org/2000/svg'>
					<path
						class='fill-current'
						fill-rule='evenodd'
						clip-rule='evenodd'
						d='M1.84937 1.84937C4.02123 -0.317302 7.53683 -0.317302 9.7087 1.84937L44.6674 36.8134L79.626 1.84937C81.7979 -0.317302 85.3135 -0.317302 87.4854 1.84937C89.652 4.02123 89.652 7.53683 87.4854 9.7087L52.5214 44.6674L87.4854 79.626C89.652 81.7979 89.652 85.3135 87.4854 87.4854C85.3135 89.652 81.7979 89.652 79.626 87.4854L44.6674 52.5214L9.7087 87.4854C7.53683 89.652 4.02123 89.652 1.84937 87.4854C-0.317302 85.3135 -0.317302 81.7979 1.84937 79.626L36.8134 44.6674L1.84937 9.7087C-0.317302 7.53683 -0.317302 4.02123 1.84937 1.84937Z'
					/>
				</svg>
			</div>
		)
	}

	<div
		class='hover:bg-white hover:text-black font-bold border-2 cursor-pointer font-normal px-3 py-1 text-white menu-close-button menu-close-button--text transition-colors'
	>
		{translations.close[lang]}
	</div>
</div>

<style is:global>
	#menu-overlay {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: rgba(0, 0, 0, 0.9);
		transition: opacity 0.5s;
		visibility: hidden;
		opacity: 0;
		/* z-index: 9999; */
	}
	.menu-close-button {
		pointer-events: auto;
	}

	.menu-close-button--text {
		border: 1px solid white;
	}

	.menu-close-button:active {
		pointer-events: none;
	}

	#menu-overlay {
		z-index: 9999;
	}

	.nav-button.active {
		background-color: white;
		color: black;
	}
</style>

<script>
	document.addEventListener('astro:page-load', (event) => {
		// Select all elements with the class 'nav-button'
		const navButtons = document.querySelectorAll('.nav-button')

		// Function to remove 'active' class from all nav buttons
		function removeAllActiveClasses() {
			navButtons.forEach((button) => {
				button.classList.remove('active')
			})
		}

		function hideAllContainers() {
			// Select all .content-container elements and hide them
			const contentContainers = document.querySelectorAll('.content-container')
			contentContainers.forEach((container) => {
				container.style.display = 'none'
			})
		}

		// Function to handle click events on nav buttons
		function handleNavButtonClick(event) {
			// Prevent default action
			event.preventDefault()

			// Remove 'active' class from all nav buttons first
			removeAllActiveClasses()

			// Add 'active' class to the clicked nav button
			event.currentTarget.classList.add('active')

			// Get the 'data-content' attribute of the clicked element
			const content = event.currentTarget.getAttribute('data-content')

			// Save the 'content' value to localStorage
			localStorage.setItem('activeIntroSlide', content)

			// Optionally, log the saved value to confirm it's working
			console.log('Active Intro Slide set to:', content)

			// Select element with id === content and show it
			hideAllContainers()
			const contentContainer = document.getElementById(content)
			contentContainer.style.display = 'block'
		}

		// Function to activate the nav button based on localStorage or default to first button
		function activateStoredNavButton() {
			const activeIntroSlide = localStorage.getItem('activeIntroSlide')
			if (activeIntroSlide) {
				let found = false
				navButtons.forEach((button) => {
					if (button.getAttribute('data-content') === activeIntroSlide) {
						button.classList.add('active')
						found = true
					}
				})
				// If no matching button is found, activate the first button
				if (!found && navButtons.length > 0) {
					navButtons[0].classList.add('active')
				}
			} else {
				// If no value is set in localStorage, apply the 'active' class to the first button
				if (navButtons.length > 0) {
					navButtons[0].classList.add('active')
				}
			}
		}

		// Attach the event listener to each nav button and activate the stored nav button
		navButtons.forEach((button) => {
			button.addEventListener('click', handleNavButtonClick)
		})

		// Check and activate the nav button as per localStorage when the page loads
		activateStoredNavButton()

		// Select all .content-container elements and hide them
		hideAllContainers()

		// Find all buttons with .language--button class and add event listener to each
		const languageButtons = document.querySelectorAll('.intro__language--button')
		languageButtons.forEach((button) => {
			button.addEventListener('click', (event) => {
				localStorage.setItem('hideIntro', 'false')
			})
		})

		// Check activeIntroSlide and show the corresponding content or if nothing found show the one with id === 'intro'
		const activeIntroSlide = localStorage.getItem('activeIntroSlide')
		if (activeIntroSlide) {
			const contentContainer = document.getElementById(activeIntroSlide)
			if (contentContainer) {
				contentContainer.style.display = 'block'
			} else {
				document.getElementById('intro').style.display = 'block'
			}
		} else {
			document.getElementById('intro').style.display = 'block'
		}
	})
</script>
