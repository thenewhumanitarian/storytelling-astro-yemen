<!-- Menu icon -->
<div title='Open menu'>
	<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' class='fill-current text-white cursor-pointer' id='menu-button--open'>
		<path d='M0 2v2h24V2Zm0 9v2h24v-2Zm0 9v2h24v-2Z'></path>
	</svg>
	<svg
		width='24'
		height='24'
		viewBox='0 0 24 24'
		fill='none'
		xmlns='http://www.w3.org/2000/svg'
		id='menu-button--close'
		class='fill-current text-white cursor-pointer'
	>
		<g clip-path='url(#clip0_306_4)'>
			<rect width='30' height='2' transform='matrix(-0.707107 0.707107 0.707107 0.707107 22 1)' fill='current'></rect>
			<rect width='30' height='2' transform='matrix(0.707107 0.707107 0.707107 -0.707107 1 2)' fill='current'></rect>
		</g>
		<defs>
			<clipPath id='clip0_306_4'>
				<rect width='24' height='24' fill='white'></rect>
			</clipPath>
		</defs>
	</svg>
</div>

<script is:inline>
	const DEBUG_MODE = false

	// Define functions

	/* OPEN MENU */
	function openMenu() {
		// Block body scroll when menu is open
		document.body.style.overflow = 'hidden'

    // Hide menu-button--open
    const menuButtonOpen = document.getElementById('menu-button--open')
    menuButtonOpen.style.display = 'none'

    // Show menu-button--close
    const menuButtonClose = document.getElementById('menu-button--close')
    menuButtonClose.style.display = 'block'

		const menuOverlay = document.getElementById('menu-overlay')
		setTimeout(() => {
			menuOverlay.style.display = 'flex'
			menuOverlay.style.visibility = 'visible'
			menuOverlay.style.opacity = 1
		}, 100)

		// Block scrolling on body when menu is open
		document.body.style.overflow = 'hidden'
	}

	/* CLOSE MENU */
	function closeMenu(e) {
		const menuOverlay = document.getElementById('menu-overlay')

		// Unblock body scroll when menu is closed
		document.body.style.overflow = 'auto'

    // Hide menu-button--open
    const menuButtonOpen = document.getElementById('menu-button--open')
    menuButtonOpen.style.display = 'block'

    // Show menu-button--close
    const menuButtonClose = document.getElementById('menu-button--close')
    menuButtonClose.style.display = 'none'

		if (e.target === menuOverlay) {
			// Hide menu overlay
			menuOverlay.style.display = 'none'
			menuOverlay.style.visibility = 'hidden'
			menuOverlay.style.opacity = 0

			setShowIntroFalse()

			// Block scrolling on body when menu is open
			document.body.style.overflow = 'auto'
		}
	}

	function initMenuOverlay() {
		const menuOverlay = document.getElementById('menu-overlay')
		const menuButton = document.getElementById('menu-button--open')

		const closeButtons = document.querySelectorAll('.menu-close-button')

		localStorage.setItem('activeIntroSlide', 'intro')

		// Add event listeners
		closeButtons.forEach((el) => {
			el.addEventListener('click', closeMenu)
		})

		// Add event listeners
		menuButton.addEventListener('click', openMenu)
		menuOverlay.addEventListener('click', closeMenu)

		checkIntroOverlay()
	}

	function checkIntroOverlay() {
		// Check if 'hideIntro' is not set to 'false'
		if (localStorage.getItem('hideIntro') !== 'true' || DEBUG_MODE) {
			openMenu() // Automatically open the menu if condition is met
		}
	}

	function setShowIntroFalse() {
		localStorage.setItem('hideIntro', 'true') // Set 'hideIntro' to 'false' in localStorage
		console.log('hideIntro set to false in localStorage')
	}

	document.addEventListener('DOMContentLoaded', () => {
		initMenuOverlay()
	})

	document.addEventListener('astro:after-swap', () => {
		initMenuOverlay()
	})

	document.addEventListener('astro:page-load', () => {
		initMenuOverlay()
	})

	document.addEventListener('astro:before-swap', () => {
		const menuOverlay = document.getElementById('menu-overlay')
		const menuButton = document.getElementById('menu-button--open')
		const closeButtons = document.querySelectorAll('.menu-close-button')

		// Remove event listeners
		closeButtons.forEach((el) => {
			el.removeEventListener('click', closeMenu)
		})

		// Correctly remove event listeners using the named functions
		menuButton.removeEventListener('click', openMenu)
		menuOverlay.removeEventListener('click', closeMenu)
	})
</script>
