---
import AttachmentImage from './AttachmentImage.astro'
import { translations } from '../data/translations'

export interface Props {
	attachments?: Array<String>
}

const { attachments } = Astro.props as Props

function categoriseAttachments(attachments) {
	const categories = {
		images: { items: [] },
		videos: { items: [] },
		documents: { items: [] },
		audios: { items: [] },
	}

	if (attachments.length > 0) {
		attachments.forEach((attachment) => {
			const extension = attachment.split('.').pop().toLowerCase()

			const attachmentObject = {
				fileName: attachment,
				type: extension,
			}

			switch (extension) {
				case 'jpg':
				case 'png':
				case 'heic':
					categories.images.items.push(attachmentObject)
					break
				case 'mp4':
					categories.videos.items.push(attachmentObject)
					break
				case 'pdf':
				case 'doc':
				case 'docx':
					categories.documents.items.push(attachmentObject)
					break
				case 'm4a':
				case 'wav':
				case 'mp3':
					categories.audios.items.push(attachmentObject)
					break
			}
		})
	}

	return categories
}

const categorisedAttachments = categoriseAttachments(attachments)

// Flatten the categorisedAttachments for rendering
const flattenedAttachments = [
	...categorisedAttachments.images.items.map((item) => ({ ...item, category: 'image' })),
	...categorisedAttachments.videos.items.map((item) => ({ ...item, category: 'video' })),
	...categorisedAttachments.documents.items.map((item) => ({ ...item, category: 'document' })),
	...categorisedAttachments.audios.items.map((item) => ({ ...item, category: 'audio' })),
]

let imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-2 md:grid-cols-3`

if (categorisedAttachments.images.items.length === 1) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-1 md:grid-cols-1`
} else if (categorisedAttachments.images.items.length === 2) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-2 md:grid-cols-2`
} else if (categorisedAttachments.images.items.length === 3) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-2 md:grid-cols-3`
} else if (categorisedAttachments.images.items.length === 4) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-2 md:grid-cols-4`
} else if (categorisedAttachments.images.items.length === 5) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-3 md:grid-cols-4`
} else if (categorisedAttachments.images.items.length === 6) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-3 md:grid-cols-4`
} else if (categorisedAttachments.images.items.length === 7) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-3 md:grid-cols-4`
} else if (categorisedAttachments.images.items.length === 8) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-3 md:grid-cols-4`
} else if (categorisedAttachments.images.items.length === 9) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-3 md:grid-cols-4`
} else if (categorisedAttachments.images.items.length === 10) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-3 md:grid-cols-4`
} else if (categorisedAttachments.images.items.length === 11) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-3 md:grid-cols-4`
} else if (categorisedAttachments.images.items.length === 12) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-3 md:grid-cols-12`
}

console.log(flattenedAttachments)
---

{
	attachments.length > 0 && (
		<>
			<section class='flex flex-col w-full justify-center items-center'>
				{/* <h3>Gallery</h3> */}
				<div class='grid gap-3 grid-cols-5'>
					{flattenedAttachments.map((attachment, index) => {
						switch (attachment.category) {
							case 'image':
								return (
									<div class='w-48 aspect-square border-white border hover:scale-105 transition-all cursor-pointer flex items-center justify-center'>
										<AttachmentImage fileName={attachment.fileName} />
									</div>
								)
							case 'video':
								// Render video attachments
								return (
									<div class='w-48 aspect-square border-white border hover:scale-105 transition-all cursor-pointer flex items-center justify-center'>
										<p class='m-0'>Video</p>
									</div>
								)
							case 'audio':
								// Render audio attachments
								return (
									<div class='w-48 aspect-square border-white border hover:scale-105 transition-all cursor-pointer flex items-center justify-center'>
										<p class='m-0'>Audio</p>
									</div>
								)
							case 'document':
								// Render document links
								return (
									<p>
										<div class='w-48 aspect-square border-white border hover:scale-105 transition-all cursor-pointer flex items-center justify-center'>
											<p class='m-0'>Document</p>
										</div>
									</p>
								)
							default:
								return null
						}
					})}
				</div>
			</section>
		</>
	)
}
