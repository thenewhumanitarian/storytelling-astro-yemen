---
import AttachmentImage from './AttachmentImage.astro'

export interface Props {
	attachments?: Array<String>
}

const { attachments } = Astro.props as Props

function categoriseAttachments(attachments) {
	const categories = {
		images: [],
		videos: [],
		documents: [],
		audios: [],
	}

	if (attachments.length > 0) {
		attachments.forEach((attachment) => {
			const extension = attachment.split('.').pop().toLowerCase()

			switch (extension) {
				case 'jpg':
				case 'png':
				case 'heic':
					categories.images.push(attachment)
					break
				case 'mp4':
					categories.videos.push(attachment)
					break
				case 'pdf':
				case 'doc':
				case 'docx':
					categories.documents.push(attachment)
					break
				case 'm4a':
				case 'wav':
				case 'mp3':
					categories.audios.push(attachment)
					break
			}
		})
	}

	return categories
}

const categorisedAttachments = categoriseAttachments(attachments)

/* Image: ID 63 49, Document: ID 68, Video: 66 */

let imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-2 md:grid-cols-3`

if (categorisedAttachments.images.length === 1) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-1 md:grid-cols-1`
} else if (categorisedAttachments.images.length === 2) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-2 md:grid-cols-2`
} else if (categorisedAttachments.images.length === 3) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-2 md:grid-cols-3`
} else if (categorisedAttachments.images.length === 4) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-2 md:grid-cols-4`
} else if (categorisedAttachments.images.length === 5) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-3 md:grid-cols-4`
} else if (categorisedAttachments.images.length === 6) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-3 md:grid-cols-4`
} else if (categorisedAttachments.images.length === 7) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-3 md:grid-cols-4`
} else if (categorisedAttachments.images.length === 8) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-3 md:grid-cols-4`
} else if (categorisedAttachments.images.length === 9) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-3 md:grid-cols-4`
} else if (categorisedAttachments.images.length === 10) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-3 md:grid-cols-4`
} else if (categorisedAttachments.images.length === 11) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-3 md:grid-cols-4`
} else if (categorisedAttachments.images.length === 12) {
	imageGridClasses = `grid gap-2 sm:gap-5 sm:grid-cols-3 md:grid-cols-12`
}
---

{
	attachments.length > 0 && (
		<>
			<section
				class={`flex flex-col gap-5 z-10 md:-mx-0 ${
					categorisedAttachments.images?.length > 1 ? 'lg:-mx-20 2xl:-mx-56' : ''
				} bg-zinc-900 border-y border-zinc-500 px-2 sm:px-5 py-2 sm:pb-6 sm:pt-5 prose-xl prose-p:mb-0 prose-p:mt-2 prose-img:m0 prose-h3:pb-3`}
			>
				{categorisedAttachments.images.length > 0 && (
					<div>
						<h3 class='flex items-center justify-start gap-x-3'>
							<span class='inline-block w-8 h-8 flex items-center'>
								<svg
									xmlns='http://www.w3.org/2000/svg'
									fill='none'
									viewBox='0 0 24 24'
									stroke-width='1.5'
									stroke='currentColor'
									class='w-full h-auto'
								>
									<path
										stroke-linecap='round'
										stroke-linejoin='round'
										d='m2.25 15.75 5.159-5.159a2.25 2.25 0 0 1 3.182 0l5.159 5.159m-1.5-1.5 1.409-1.409a2.25 2.25 0 0 1 3.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 0 0 1.5-1.5V6a1.5 1.5 0 0 0-1.5-1.5H3.75A1.5 1.5 0 0 0 2.25 6v12a1.5 1.5 0 0 0 1.5 1.5Zm10.5-11.25h.008v.008h-.008V8.25Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z'
									/>
								</svg>
							</span>
							Images
						</h3>
						<div class={`${imageGridClasses}`}>
							{categorisedAttachments.images.map((image) => (
								<div id={image} class='image-wrapper'>
									<AttachmentImage fileName={image} />
								</div>
							))}
						</div>
					</div>
				)}

				{categorisedAttachments.videos.length > 0 && (
					<div>
						<h3>Videos</h3>
						{categorisedAttachments.videos.map((video, index) => (
							<div class='aspect-[16/9] w-full relative'>
								<video controls class='z-50 absolute top-0 left-0 w-full h-full m-0'>
									<source src={`../../src/assets/${video}`} type='video/mp4' />
								</video>
							</div>
						))}
					</div>
				)}

				{categorisedAttachments.audios.length > 0 && (
					<div>
						<h3>Audio</h3>
						{categorisedAttachments.audios.map((audio, index) => (
							<div class='relative'>
								<audio controls class='w-full mb-4'>
									<source src={`../../src/assets/${audio}`} type='audio/mp3' />
								</audio>
							</div>
						))}
					</div>
				)}

				{categorisedAttachments.documents.length > 0 && (
					<div>
						<h3>Documents</h3>
						{categorisedAttachments.documents.map((document, index) => (
							<p>
								<a href={`../../src/assets/${document}`} target='_blank' rel='noopener noreferrer'>
									{document}
								</a>
							</p>
						))}
					</div>
				)}
			</section>
		</>
	)
}
