---
const { story } = Astro.props

let { lang } = Astro.params
if (!lang) {
	// Read path parameters for language and slug
	const { path } = Astro.params

	const pathParams = path?.toString().split('/')
	lang = pathParams?.[0] || 'en'
}
---

<a class='block' href={`/stories/${lang}/${story.slugs[lang]}`} id={`story-tile--${story.id}`}>
	<div class={`flex border-zinc-600 border-t ${story.highlighted ? 'flex-row-reverse pt-5 pb-2' : 'flex-row pt-3 px-3'} w-full`}>
		<div class={`relative aspect-square ${story.highlighted ? 'w-64' : 'w-24'} overflow-hidden`}>
			<img src={`${story.storyImage.main}`} alt={story.story[lang].title} class='absolute top-0 left-0 w-full h-full object-cover' />
		</div>
		<div class={`flex flex-col w-full p-3 ${story.highlighted ? 'bg-burgundy' : ''}`}>
			<h3 class={`text-white ${story.highlighted ? 'text-2xl' : 'text-xl line-clamp-1'}`}>
				{story.story[lang].title || 'Title not available'}
			</h3>
			<p class='text-zinc-200 m-0' style='margin-bottom: 0;'>
				{story.personalInfo[lang].name}
				{story.personalInfo[lang].surname}
			</p>
		</div>
	</div>
</a>

<script define:vars={{ lang, story }} is:inline>
	// Select the article element
	const articleEl = document.querySelector(`#story-tile--${story.id}`)

	// Check if article was read before and write date of last read if that's the case
	let readArticles = JSON.parse(localStorage.getItem('readArticles')) || []
	let readArticle = readArticles.find((article) => article.slug === story.slugs[lang])
	if (readArticle) {
		// If the current article has been read before, set the data-lastread attribute with the timestamp
		articleEl.setAttribute('data-lastread', readArticle.timestamp)
	} else {
		// If the current article has not been read, set data-lastread to a default value or omit this part altogether
		articleEl.setAttribute('data-lastread', 'never')
	}
</script>
