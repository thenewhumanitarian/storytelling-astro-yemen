---
import MenuIcon from '@components/menu/MenuIcon.astro'
import MenuIconLegacy from '@components/menu/MenuIconLegacy.astro'
import HeaderLogo from '@components/header/HeaderLogoSimple.astro'
import FilterButtons from '@components/buttons/FilterButtons.astro'
import SwitchViewButtons from '@components/buttons/SwitchViewButtons.astro'
import LanguageButtons from '@components/buttons/LanguageButtons.astro'

export interface Props {
	filterButtons?: boolean
	languageButtons?: object
	switchViewButtons?: boolean
	dark?: boolean
  legacy?: boolean
}

const { filterButtons, languageButtons, dark, switchViewButtons, legacy } = Astro.props as Props

let { lang } = Astro.params
if (!lang) {
	// Read path parameters for language and slug
	const { path } = Astro.params

	const pathParams = path?.toString().split('/')
	lang = pathParams?.[0] || 'en'
}
---

<header
	class={`${dark ? 'bg-black shadow-xs shadow-white' : 'bg-white'} flex items-center justify-between w-full cursor-default h-20 top-0 left-0 z-20 shadow-zinc-400 shadow-sm`}
	dir='ltr'
	transition:animate='none'
>
{legacy ? (<div class='flex flex-row items-center justify-center px-6 w-full'>
  <div class='flex justify-start gap-x-2 items-center'>
    <div class={`${dark ? 'text-white' : 'text-black'} fill-current flex gap-3 items-center justify-start mr-3`}>
      {legacy ? <a href={`/legacy/about/`}><MenuIconLegacy /></a> : <MenuIcon />}
    </div>
    {switchViewButtons && <SwitchViewButtons />}
    {filterButtons && <FilterButtons />}
  </div>
  <div class='flex justify-center h-full w-full'>
    <HeaderLogo dark={dark} />
  </div>
  {legacy ? (
    <div class={`${dark ? 'text-white' : 'text-black'} opacity-0 fill-current flex gap-3 items-center justify-start ml-3`}>
      <MenuIconLegacy />
    </div>) : (
      <div class='justify-end flex gap-x-4'>
        {
          languageButtons && (
            <div class='fixed top-24 right-2 -mt-2 md:-mt-0 md:top-0 md:left-0 shadow-lg md:shadow-none md:relative flex items-center gap-3 z-20'>
              <LanguageButtons links={languageButtons} />
            </div>
          )
        }
      </div>
    )}
</div>) : (<div class='grid grid-cols-3 items-center px-6 w-full'>
  <div class='flex justify-start gap-x-2 items-center'>
    <div class={`${dark ? 'text-white' : 'text-black'} fill-current flex gap-3 items-center justify-start mr-3`}>
      {legacy ? <MenuIconLegacy /> : <MenuIcon />}
    </div>
    {switchViewButtons && <SwitchViewButtons />}
    {filterButtons && <FilterButtons />}
  </div>
  <div class='flex justify-center h-full w-full'>
    <HeaderLogo dark={dark} />
  </div>
  <!-- <div class='justify-end hidden sm:flex'><p class={`${dark ? 'text-white' : ''} font-serif`}>Journalism from the heart of crises</p></div> -->
  <div class='justify-end flex gap-x-4'>
    {
      languageButtons && (
        <div class='fixed top-24 right-2 -mt-2 md:-mt-0 md:top-0 md:left-0 shadow-lg md:shadow-none md:relative flex items-center gap-3 z-20'>
          <LanguageButtons links={languageButtons} />
        </div>
      )
    }
  </div>
</div>)}
	
</header>

<style>
	a:hover {
		text-decoration: none;
	}
</style>
