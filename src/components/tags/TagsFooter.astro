---
interface Props {
	tags: string[]
}

import { translations } from '@data/translations'

import Tag from '@components/tags/Tag.astro'

// Read path parameters for language and slug
const { path } = Astro.params

const pathParams = path?.toString().split('/')
const tag = pathParams?.[1] || 'en'

const { tags } = Astro.props as Props

// Find the tag in the list with matching spelling, ignoring case
const matchingTag = tags.find((tagItem) => tagItem.toLowerCase() === tag)

let { lang } = Astro.params

if (!lang) {
	// Read path parameters for language and slug
	const { path } = Astro.params

	const pathParams = path?.toString().split('/')
	lang = pathParams?.[0] || 'en'
}
---

<section class='w-full max-w-5xl text-center mx-auto pb-5 pt-6 border-zinc-500 my-12 tag-wrapper'>
	<span class='text-base text-center collapsible px-3 py-2 font-sans font-bold bg-transparent border-zinc-200 text-zinc-200'>
		{translations.moreStoriesAbout[lang]}
	</span>
	<div class='text-center flex flex-row gap-2 items-center justify-center pt-3 max-w-2xl mx-auto flex-wrap'>
		{
			tags
				// Sort tags
				.sort((a, b) => a.localeCompare(b))
				.map((tag) => {
					return <Tag tag={tag} />
				})
		}
	</div>
</section>

<style>
	.tag-wrapper {
		text-align: center;
	}
	button {
		text-align: center;
	}
</style>
